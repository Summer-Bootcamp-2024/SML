services:
  fastapi:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgresql:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - ./Backend/.env
    container_name: teamM
    tty: true
    networks:
      - teamM



  postgresql:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./Backend/.env
    ports:
      - "5432:5432"
    networks:
      - teamM

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - teamM

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
       - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsSL http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - teamM


volumes:
  postgres_data:
  esdata:

networks:
  teamM:
    driver: bridge
